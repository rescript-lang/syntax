@@jsxConfig({version: 3})
@obj
external makeProps: (
  ~a: '\"type-a",
  ~b: array<option<[#Foo('\"type-a")]>>,
  ~c: 'a,
  ~key: string=?,
  unit,
) => {"a": '\"type-a", "b": array<option<[#Foo('\"type-a")]>>, "c": 'a} = ""

let make = (type a, ~a: a, ~b: array<option<[#Foo(a)]>>, ~c: 'a, _) =>
  ReactDOMRe.createDOMElementVariadic("div", [])
let make = {
  let \"Newtype" = (\"Props": {"a": '\"type-a", "b": array<option<[#Foo('\"type-a")]>>, "c": 'a}) =>
    make(~c=\"Props"["c"], ~b=\"Props"["b"], ~a=\"Props"["a"])
  \"Newtype"
}

@@jsxConfig({version: 4, mode: "classic"})
type props<'a, 'b, 'c> = {key?: string, a: 'a, b: 'b, c: 'c}

let make = (
  _: props<a, array<option<[#Foo(a)]>>, 'a>,
  type a,
  ~a: a,
  ~b: array<option<[#Foo(a)]>>,
  ~c: 'a,
  _,
) => ReactDOMRe.createDOMElementVariadic("div", [])
let make = {
  let \"Newtype" = (props: props<_>) => make(props)
  \"Newtype"
}

@@jsxConfig({version: 4, mode: "automatic"})
type props<'a, 'b, 'c> = {key?: string, a: 'a, b: 'b, c: 'c}

let make = (
  _: props<a, array<option<[#Foo(a)]>>, 'a>,
  type a,
  ~a: a,
  ~b: array<option<[#Foo(a)]>>,
  ~c: 'a,
  _,
) => ReactDOM.jsx("div", {key: ?None})
let make = {
  let \"Newtype" = (props: props<_>) => make(props)
  \"Newtype"
}
