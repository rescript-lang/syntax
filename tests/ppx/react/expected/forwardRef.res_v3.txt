module FancyInput = {
  @obj
  external makeProps: (
    ~className: 'className=?,
    ~children: 'children,
    ~key: string=?,
    ~ref: 'ref=?,
    unit,
  ) => {"className": option<'className>, "children": 'children} = ""
  let make =
    (@warning("-16") ~className=?, @warning("-16") ~children) =>
      @warning("-16")
      ref =>
        ReactDOMRe.createDOMElementVariadic(
          "div",
          [
            ReactDOMRe.createDOMElementVariadic(
              "input",
              ~props=ReactDOMRe.domProps(
                ~type_="text",
                ~className?,
                ~ref=?{Js.Nullable.toOption(ref)->Belt.Option.map(ReactDOM.Ref.domRef)},
                (),
              ),
              [],
            ),
            children,
          ],
        )
  let make = React.forwardRef({
    let \"ForwardRef$FancyInput" = (
      \"Props": {"className": option<'className>, "children": 'children},
      ref,
    ) => make(~children=\"Props"["children"], ~className=?\"Props"["className"], ref)
    \"ForwardRef$FancyInput"
  })
}
@obj external makeProps: (~key: string=?, unit) => {.} = ""

let make = () => {
  let input = React.useRef(Js.Nullable.null)

  ReactDOMRe.createDOMElementVariadic(
    "div",
    [
      React.createElement(
        FancyInput.make,
        FancyInput.makeProps(~ref=input, ~children={React.string("Click to focus")}, ()),
      ),
    ],
  )
}
let make = {
  let \"ForwardRef" = (\"Props": {.}) => make()
  \"ForwardRef"
}
