@@jsxConfig({version: 3})

module Select = {
  module type T = {
    type key
    type t
  }
  @obj
  external makeProps: (
    ~model: module(T with type t = '\"type-a" and type key = '\"type-key"),
    ~selected: option<'\"type-key">,
    ~onChange: option<'\"type-key"> => unit,
    ~items: array<'\"type-a">,
    ~key: string=?,
    unit,
  ) => {
    "model": module(T with type t = '\"type-a" and type key = '\"type-key"),
    "selected": option<'\"type-key">,
    "onChange": option<'\"type-key"> => unit,
    "items": array<'\"type-a">,
  } = ""

  @react.component
  let make = (
    type a key,
    ~model as module(T: T with type t = a and type key = key),
    ~selected: option<key>,
    ~onChange: option<key> => unit,
    ~items: array<a>,
  ) => {
    let _ = (model, selected, onChange, items)
    ReactDOMRe.createDOMElementVariadic("div", [])
  }
  let make = {
    let \"FirstClassModules$Select" = (
      \"Props": {
        "model": module(T with type t = '\"type-a" and type key = '\"type-key"),
        "selected": option<'\"type-key">,
        "onChange": option<'\"type-key"> => unit,
        "items": array<'\"type-a">,
      },
    ) =>
      make(
        ~items=\"Props"["items"],
        ~onChange=\"Props"["onChange"],
        ~selected=\"Props"["selected"],
        ~model=\"Props"["model"],
      )
    \"FirstClassModules$Select"
  }
}

@@jsxConfig({version: 4, mode: "classic"})

module Select = {
  module type T = {
    type key
    type t
  }
  type props<'model, 'selected, 'onChange, 'items> = {
    model: 'model,
    selected: 'selected,
    onChange: 'onChange,
    items: 'items,
  }

  let make = (
    type a key,
    {model: module(T: T with type t = a and type key = key), selected, onChange, items, _}: props<
      _,
      option<key>,
      option<key> => unit,
      array<a>,
    >,
  ) => {
    let _ = (model, selected, onChange, items)
    ReactDOM.createDOMElementVariadic("div", [])
  }
  let make = {
    let \"FirstClassModules$Select" = (props: props<_>) => make(props)

    \"FirstClassModules$Select"
  }
}

module External = {
  module type T = {
    type key
    type t
  }
  type props<'model, 'selected, 'onChange, 'items> = {
    model: 'model,
    selected: 'selected,
    onChange: 'onChange,
    items: 'items,
  }

  @module("c")
  external make: React.componentLike<
    props<
      module(T with type t = 'a and type key = 'key),
      option<'key>,
      (option<'key> => unit),
      array<'a>,
    >,
    React.element,
  > = "default"
}
