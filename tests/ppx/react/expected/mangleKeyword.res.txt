@@jsxConfig({version: 3})

module C0 = {
  @obj external makeProps: (~_open: 'T_open, ~key: string=?, unit) => {"_open": 'T_open} = ""

  @react.component let make = (@warning("-16") ~_open) => React.string(_open)
  let make = {
    let \"MangleKeyword$C0" = (\"Props": {"_open": 'T_open}) => make(~_open=\"Props"["_open"])
    \"MangleKeyword$C0"
  }
}
module C1 = {
  @obj external makeProps: (~_open: string, ~key: string=?, unit) => {"_open": string} = ""
  external make: React.componentLike<{"_open": string}, React.element> = "default"
}

let c0 = React.createElement(C0.make, C0.makeProps(~_open="x", ()))
let c1 = React.createElement(C1.make, C1.makeProps(~_open="x", ()))

@@jsxConfig({version: 4, mode: "classic"})

module C0 = {
  type props<'T_open> = {
    _open: 'T_open,
  }

  @react.component let make = ({_open, _}: props<'T_open>) => React.string(_open)
  let make = {
    let \"MangleKeyword$C0" = (props: props<_>) => make(props)

    \"MangleKeyword$C0"
  }
}
module C1 = {
  type props<'T_open> = {
    _open: 'T_open,
  }

  external make: @as("open") React.componentLike<props<string>, React.element> = "default"
}

let c0 = React.createElement(C0.make, {_open: "x"})
let c1 = React.createElement(C1.make, {_open: "x"})

@@jsxConfig({version: 4, mode: "automatic"})

module C0 = {
  type props<'T_open> = {
    _open: 'T_open,
  }

  @react.component let make = ({_open, _}: props<'T_open>) => React.string(_open)
  let make = {
    let \"MangleKeyword$C0" = (props: props<_>) => make(props)

    \"MangleKeyword$C0"
  }
}
module C1 = {
  type props<'T_open> = {
    _open: 'T_open,
  }

  external make: @as("open") React.componentLike<props<string>, React.element> = "default"
}

let c0 = React.jsx(C0.make, {_open: "x"})
let c1 = React.jsx(C1.make, {_open: "x"})
