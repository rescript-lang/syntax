type props<'a, 'b> = {
  @optional key: string,
  @optional ref: React.ref<Js.Nullable.t<Dom.element>>,
  a: 'a,
  b: 'b,
}
let make: 'a. (~a: 'a, ~b: 'a, 'a) => React.element = ({ref}: props<'a, 'b>) => {
  let _ = ref
  (type a): ((~a: a, ~b: a, a) => React.element) =>
    (~a, ~b, _) => ReactDOMRe.createDOMElementVariadic("div", [])
}
let make = {
  let \"TypeConstraint" = (props: props<_>) => make(props)
  \"TypeConstraint"
}
