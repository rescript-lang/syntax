@@jsxConfig({version: 4, mode: "classic"})

module V4CA = {
  type props = {}

  @react.component let make = (_: props) => ReactDOM.createDOMElementVariadic("div", [])
  let make = {
    let \"NoPropsWithKey$V4CA" = props => make(props)

    \"NoPropsWithKey$V4CA"
  }
}

module V4CB = {
  type props = {}

  @module("c")
  external make: React.componentLike<props, React.element> = "component"
}

module V4C = {
  type props = {}

  @react.component
  let make = (_: props) =>
    ReactDOM.createElement(
      React.fragment,
      [
        ReactPPX4Support.createElementWithKey(~key="k", React.createElement, V4CA.make, {}),
        ReactPPX4Support.createElementWithKey(~key="k", React.createElement, V4CB.make, {}),
      ],
    )
  let make = {
    let \"NoPropsWithKey$V4C" = props => make(props)

    \"NoPropsWithKey$V4C"
  }
}

@@jsxConfig({version: 4, mode: "automatic"})

module V4CA = {
  type props = {}

  @react.component let make = (_: props) => ReactDOM.jsx("div", {})
  let make = {
    let \"NoPropsWithKey$V4CA" = props => make(props)

    \"NoPropsWithKey$V4CA"
  }
}

module V4CB = {
  type props = {}

  @module("c")
  external make: React.componentLike<props, React.element> = "component"
}

module V4C = {
  type props = {}

  @react.component
  let make = (_: props) =>
    React.jsxs(
      React.jsxFragment,
      {
        children: [
          React.jsxKeyed(V4CA.make, {}, ~key="k", ()),
          React.jsxKeyed(V4CB.make, {}, ~key="k", ()),
        ],
      },
    )
  let make = {
    let \"NoPropsWithKey$V4C" = props => make(props)

    \"NoPropsWithKey$V4C"
  }
}
