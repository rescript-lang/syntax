let _ = ((div ~children:[] ())[@JSX ])
let _ = ((div ~children:[] ())[@JSX ])
let _ = ((div ~className:(({js|menu|js})[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ = ((div ~className:(({js|menu|js})[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ = ((div ~className:(({js|menu|js})[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ = ((div ~className:(({js|menu|js})[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~onClick:((fun _ -> Js.log {js|click|js})
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~onClick:((fun _ -> Js.log {js|click|js})
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ = ((Navbar.createElement ~children:[] ())[@JSX ])
let _ = ((Navbar.createElement ~children:[] ())[@JSX ])
let _ = ((Navbar.createElement ~children:[] ())[@JSX ])
let _ =
  ((Navbar.createElement ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~children:[] ())
  [@JSX ])
let _ = ((Dot.Up.createElement ~children:[] ())[@JSX ])
let _ = ((Dot.Up.createElement ~children:[] ())[@JSX ])
let _ = ((Dot.Up.createElement ~children:[] ())[@JSX ])
let _ =
  ((Dot.Up.createElement
      ~children:[((Dot.low.createElement ~children:[] ())[@JSX ])] ())
  [@JSX ])
let _ =
  ((Dot.Up.createElement
      ~children:[((Dot.Up.createElement ~children:[] ())[@JSX ])] ())
  [@JSX ])
let _ =
  ((Dot.Up.createElement ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~children:[] ())
  [@JSX ])
let _ = ((Dot.low.createElement ~children:[] ())[@JSX ])
let _ = ((Dot.low.createElement ~children:[] ())[@JSX ])
let _ = ((Dot.low.createElement ~children:[] ())[@JSX ])
let _ =
  ((Dot.low.createElement
      ~children:[((Dot.Up.createElement ~children:[] ())[@JSX ])] ())
  [@JSX ])
let _ =
  ((Dot.low.createElement
      ~children:[((Dot.low.createElement ~children:[] ())[@JSX ])] ())
  [@JSX ])
let _ =
  ((Dot.low.createElement ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~children:[] ())
  [@JSX ])
let _ = ((el ~punned:((punned)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = ((el ?punned:((punned)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = ((el ~punned:((punned)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = ((el ?punned:((punned)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = ((el ?a:((b)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = ((el ?a:((b)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
let _ = (([])[@JSX ])
let _ = (([])[@JSX ])
let _ =
  ((div ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~children:[((div ~className:(({js|submenu|js})[@ns.namedArgLoc ])
                     ~children:[sub1] ())
                [@JSX ]);
                ((div ~className:(({js|submenu|js})[@ns.namedArgLoc ])
                    ~children:[sub2] ())
                [@JSX ])] ())
  [@JSX ])
let _ =
  ((div ~className:(({js|menu|js})[@ns.namedArgLoc ])
      ~children:[((div ~className:(({js|submenu|js})[@ns.namedArgLoc ])
                     ~children:[sub1] ())
                [@JSX ]);
                ((div ~className:(({js|submenu|js})[@ns.namedArgLoc ])
                    ~children:[sub2] ())
                [@JSX ])] ())
  [@JSX ])
let _ = ((div ~children:child ())[@JSX ])
let _ = ((Foo.createElement ~children:(fun a -> 1) ())[@JSX ])
let _ =
  ((Foo.createElement ~children:((Foo2.createElement ~children:[] ())
      [@JSX ]) ())
  [@JSX ])
let _ = ((Foo.createElement ~children:[|a|] ())[@JSX ])
let _ = ((Foo.createElement ~children:(1, 2) ())[@JSX ])
let _ = ((Foo.createElement ~children:(1, 2) ())[@JSX ])
let _ =
  ((div ~children:[ident; [|1;2;3|]; ((call a b)[@ns.braces ]); (x.y).z] ())
  [@JSX ])
let _ =
  ((Outer.createElement ~inner:((Inner.createElement ~children:[] ())
      [@ns.namedArgLoc ][@JSX ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~onClick:((onClickHandler)[@ns.namedArgLoc ])
      ~children:[(([{js|foobar|js}])[@JSX ])] ())
  [@JSX ])
let _ =
  ((Window.createElement
      ~style:(({
                 width = 10;
                 height = 10;
                 paddingTop = 10;
                 paddingLeft = 10;
                 paddingRight = 10;
                 paddingBottom = 10
               })[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ =
  ((OverEager.createElement ~fiber:((Metal.fiber)[@ns.namedArgLoc ])
      ~children:[] ())
  [@JSX ])
let arrayOfListOfJsx = [|(([])[@JSX ])|]
let arrayOfListOfJsx =
  [|(([((Foo.createElement ~children:[] ())[@JSX ])])[@JSX ])|]
let arrayOfListOfJsx =
  [|(([((Foo.createElement ~children:[] ())[@JSX ])])
    [@JSX ]);(([((Bar.createElement ~children:[] ())[@JSX ])])[@JSX ])|]
let sameButWithSpaces = [|(([])[@JSX ])|]
let sameButWithSpaces =
  [|(([((Foo.createElement ~children:[] ())[@JSX ])])[@JSX ])|]
let sameButWithSpaces =
  [|(([((Foo.createElement ~children:[] ())[@JSX ])])
    [@JSX ]);(([((Bar.createElement ~children:[] ())[@JSX ])])[@JSX ])|]
let sameButWithSpaces =
  [|(([((Foo.createElement ~children:[] ())[@JSX ])])
    [@JSX ]);(([((Bar.createElement ~children:[] ())[@JSX ])])[@JSX ])|]
let arrayOfJsx = [||]
let arrayOfJsx = [|((Foo.createElement ~children:[] ())[@JSX ])|]
let arrayOfJsx =
  [|((Foo.createElement ~children:[] ())
    [@JSX ]);((Bar.createElement ~children:[] ())[@JSX ])|]
let sameButWithSpaces = [||]
let sameButWithSpaces = [|((Foo.createElement ~children:[] ())[@JSX ])|]
let sameButWithSpaces =
  [|((Foo.createElement ~children:[] ())
    [@JSX ]);((Bar.createElement ~children:[] ())[@JSX ])|]
let _ = ((a ~children:[] ())[@JSX ]) < ((b ~children:[] ())[@JSX ])
let _ = ((a ~children:[] ())[@JSX ]) > ((b ~children:[] ())[@JSX ])
let _ = ((a ~children:[] ())[@JSX ]) < ((b ~children:[] ())[@JSX ])
let _ = ((a ~children:[] ())[@JSX ]) > ((b ~children:[] ())[@JSX ])
let y =
  ((Routes.createElement ~path:((Routes.stateToPath state)[@ns.namedArgLoc ])
      ~isHistorical:((true)[@ns.namedArgLoc ])
      ~onHashChange:((fun _oldPath ->
                        fun _oldUrl ->
                          fun newUrl ->
                            updater
                              (fun latestComponentBag ->
                                 fun _ ->
                                   ((let currentActualPath =
                                       Routes.hashOfUri newUrl in
                                     let pathFromState =
                                       Routes.stateToPath
                                         latestComponentBag.state in
                                     ((if currentActualPath = pathFromState
                                       then None
                                       else
                                         dispatchEventless
                                           (State.UriNavigated
                                              currentActualPath)
                                           latestComponentBag ())
                                       [@ns.ternary ]))
                                   [@ns.braces ])) ())
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let z =
  ((div
      ~style:((ReactDOMRe.Style.make ~width:((width)[@ns.namedArgLoc ])
                 ~height:((height)[@ns.namedArgLoc ]) ~color:((color)
                 [@ns.namedArgLoc ]) ~backgroundColor:((backgroundColor)
                 [@ns.namedArgLoc ]) ~margin:((margin)[@ns.namedArgLoc ])
                 ~padding:((padding)[@ns.namedArgLoc ]) ~border:((border)
                 [@ns.namedArgLoc ]) ~borderColor:((borderColor)
                 [@ns.namedArgLoc ])
                 ~someOtherAttribute:((someOtherAttribute)[@ns.namedArgLoc ])
                 ())[@ns.namedArgLoc ]) ~key:((string_of_int 1)
      [@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let omega =
  ((div
      ~aList:(([width;
               height;
               color;
               backgroundColor;
               margin;
               padding;
               border;
               borderColor;
               someOtherAttribute])[@ns.namedArgLoc ])
      ~key:((string_of_int 1)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let someArray =
  ((div
      ~anArray:(([|width;height;color;backgroundColor;margin;padding;border;borderColor;someOtherAttribute|])
      [@ns.namedArgLoc ]) ~key:((string_of_int 1)[@ns.namedArgLoc ])
      ~children:[] ())
  [@JSX ])
let tuples =
  ((div
      ~aTuple:(((width, height, color, backgroundColor, margin, padding,
                  border, borderColor, someOtherAttribute,
                  definitelyBreakere))[@ns.namedArgLoc ])
      ~key:((string_of_int 1)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let icon =
  ((Icon.createElement
      ~name:((match state.volume with
              | v when v < 0.1 -> {js|sound-off|js}
              | v when v < 0.11 -> {js|sound-min|js}
              | v when v < 0.51 -> {js|sound-med|js}
              | _ -> {js|sound-max|js})[@ns.namedArgLoc ][@ns.braces ])
      ~children:[] ())
  [@JSX ])
let _ =
  ((MessengerSharedPhotosAlbumViewPhotoReact.createElement
      ?ref:((if foo#bar == baz
             then Some (foooooooooooooooooooooooo setRefChild)
             else None)[@ns.namedArgLoc ][@ns.ternary ])
      ~key:((node#legacy_attachment_id)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ = ((Foo.createElement ~bar:((bar)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ = ((Foo.createElement ?bar:((bar)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let _ =
  ((Foo.createElement ?bar:((Baz.bar)[@ns.namedArgLoc ]) ~children:[] ())
  [@JSX ])
let x = ((div ~children:[] ())[@JSX ])
let _ = ((div ~asd:((1)[@ns.namedArgLoc ]) ~children:[] ())[@JSX ])
;;foo#bar #= ((bar ~children:[] ())[@JSX ])
;;foo #= ((bar ~children:[] ())[@JSX ])
;;foo #= ((bar ~children:[] ())[@JSX ])
let x = [|((div ~children:[] ())[@JSX ])|]
let z = ((div ~children:[] ())[@JSX ])
let z =
  (((Button.createElement ~onClick:((handleStaleClick)[@ns.namedArgLoc ])
       ~children:[] ())[@JSX ]),
    ((Button.createElement ~onClick:((handleStaleClick)[@ns.namedArgLoc ])
        ~children:[] ())[@JSX ]))
let y = [|((div ~children:[] ())[@JSX ]);((div ~children:[] ())[@JSX ])|]
let y =
  [|((Button.createElement ~onClick:((handleStaleClick)[@ns.namedArgLoc ])
        ~children:[] ())
    [@JSX ]);((Button.createElement ~onClick:((handleStaleClick)
                 [@ns.namedArgLoc ]) ~children:[] ())
    [@JSX ])|]
let _ =
  ((Description.createElement
      ~term:((Text.createElement ~text:(({js|Age|js})[@ns.namedArgLoc ])
                ~children:[] ())[@ns.namedArgLoc ][@ns.braces ][@JSX ])
      ~children:[child] ())
  [@JSX ])
let _ =
  ((Description.createElement
      ~term:((Text.createElement ~text:(({js|Age|js})[@ns.namedArgLoc ])
                ~children:(([||])[@ns.namedArgLoc ]) ())
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[child] ())
  [@JSX ])
let _ =
  ((Description.createElement
      ~term:((Text.createElement ~text:(({js|Age|js})[@ns.namedArgLoc ]) ())
      [@ns.namedArgLoc ][@ns.braces ][@JSX ]) ~children:[child] ())
  [@JSX ])
let _ =
  ((Description.createElement
      ~term:((Text.createElement ~superLongPunnedProp:((superLongPunnedProp)
                [@ns.namedArgLoc ])
                ~anotherSuperLongOneCrazyLongThingHere:((anotherSuperLongOneCrazyLongThingHere)
                [@ns.namedArgLoc ]) ~text:(({js|Age|js})[@ns.namedArgLoc ])
                ~children:[] ())[@ns.namedArgLoc ][@ns.braces ][@JSX ])
      ~children:[child] ())
  [@JSX ])
let _ =
  ((Foo.createElement
      ~bar:((Baz.createElement ~superLongPunnedProp:((superLongPunnedProp)
               [@ns.namedArgLoc ])
               ~anotherSuperLongOneCrazyLongThingHere:((anotherSuperLongOneCrazyLongThingHere)
               [@ns.namedArgLoc ]) ~children:[] ())
      [@ns.namedArgLoc ][@ns.braces ][@JSX ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~children:[((span ~children:[str {js|hello|js}] ())[@JSX ])] ())
  [@JSX ])
let _ =
  ((description
      ~term:((text ~text:(({js|Age|js})[@ns.namedArgLoc ]) ~children:[] ())
      [@ns.namedArgLoc ][@ns.braces ][@JSX ]) ~children:[child] ())
  [@JSX ])
let _ =
  ((description
      ~term:((text ~text:(({js|Age|js})[@ns.namedArgLoc ]) ~children:((
                [||])[@ns.namedArgLoc ]) ())[@ns.namedArgLoc ][@ns.braces ])
      ~children:[child] ())
  [@JSX ])
let _ =
  ((description
      ~term:((text ~text:(({js|Age|js})[@ns.namedArgLoc ]) ~children:((
                [||])[@ns.namedArgLoc ]))
      [@ns.namedArgLoc ][@ns.braces ][@JSX ]) ~children:[child] ())
  [@JSX ])
let _ =
  ((description ~term:((text ~text:(({js|Age|js})[@ns.namedArgLoc ]) ())
      [@ns.namedArgLoc ][@ns.braces ][@JSX ]) ~children:[child] ())
  [@JSX ])
let _ =
  ((description
      ~term:((div ~superLongPunnedProp:((superLongPunnedProp)
                [@ns.namedArgLoc ])
                ~anotherSuperLongOneCrazyLongThingHere:((anotherSuperLongOneCrazyLongThingHere)
                [@ns.namedArgLoc ]) ~text:(({js|Age|js})[@ns.namedArgLoc ])
                ~children:[] ())[@ns.namedArgLoc ][@ns.braces ][@JSX ])
      ~children:[child] ())
  [@JSX ])
let _ =
  ((div ~onClick:((fun event -> handleChange event)
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~onClick:((fun eventWithLongIdent -> handleChange eventWithLongIdent)
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div
      ~onClick:((fun event -> ((Js.log event; handleChange event)
                   [@ns.braces ]))[@ns.namedArgLoc ][@ns.braces ])
      ~children:[] ())
  [@JSX ])
let _ =
  ((StaticDiv.createElement
      ~onClick:((fun foo ->
                   fun bar ->
                     fun baz ->
                       fun lineBreak ->
                         fun identifier ->
                           ((doStuff foo bar baz; bar lineBreak identifier)
                           [@ns.braces ]))[@ns.namedArgLoc ][@ns.braces ])
      ~children:[] ())
  [@JSX ])
let _ =
  ((AttrDiv.createElement ~onClick:((fun event -> handleChange event)
      [@ns.namedArgLoc ][@ns.braces ][@bar ]) ~children:[] ())
  [@JSX ])
let _ =
  ((AttrDiv.createElement
      ~onClick:((fun eventLongIdentifier -> handleChange eventLongIdentifier)
      [@ns.namedArgLoc ][@ns.braces ][@bar ]) ~children:[] ())
  [@JSX ])
let _ =
  ((StaticDivNamed.createElement
      ~onClick:((fun ~foo:((foo)[@ns.namedArgLoc ]) ->
                   fun ~bar:((bar)[@ns.namedArgLoc ]) ->
                     fun ~baz:((baz)[@ns.namedArgLoc ]) ->
                       fun ~lineBreak:((lineBreak)[@ns.namedArgLoc ]) ->
                         fun ~identifier:((identifier)[@ns.namedArgLoc ]) ->
                           fun () -> bar lineBreak identifier)
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~onClick:((fun e -> (((doStuff (); bar foo)[@ns.braces ]) : event))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div
      ~onClick:((fun e ->
                   fun e2 -> (((doStuff (); bar foo)[@ns.braces ]) : event))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div
      ~onClick:((fun foo ->
                   fun bar ->
                     fun baz ->
                       fun superLongIdent ->
                         fun breakLine -> (((doStuff (); bar foo)
                           [@ns.braces ]) : (event * event2 * event3 * event4
                                              * event5)))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div
      ~onClick:((fun foo ->
                   fun bar ->
                     fun baz ->
                       fun superLongIdent ->
                         fun breakLine ->
                           (doStuff () : (event * event2 * event3 * event4 *
                                           event5)))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div
      ~children:[(((match color with
                    | Black -> ReasonReact.string {js|black|js}
                    | Red -> ReasonReact.string {js|red|js}))
                [@ns.braces ])] ())
  [@JSX ])
let _ =
  ((div
      ~style:((ReactDOMRe.Style.make ~width:(({js|20px|js})
                 [@ns.namedArgLoc ]) ~height:(({js|20px|js})
                 [@ns.namedArgLoc ]) ~borderRadius:(({js|100%|js})
                 [@ns.namedArgLoc ]) ~backgroundColor:(({js|red|js})
                 [@ns.namedArgLoc ]))[@ns.namedArgLoc ][@ns.braces ][@foo ])
      ~children:[] ())
  [@JSX ])
let _ =
  ((Animated.createElement ~initialValue:((0.0)[@ns.namedArgLoc ])
      ~value:((value)[@ns.namedArgLoc ])
      ~children:((ReactDOMRe.Style.make ~width:(({js|20px|js})
                    [@ns.namedArgLoc ]) ~height:(({js|20px|js})
                    [@ns.namedArgLoc ]) ~borderRadius:(({js|100%|js})
                    [@ns.namedArgLoc ]) ~backgroundColor:(({js|red|js})
                    [@ns.namedArgLoc ]))[@ns.braces ]) ())
  [@JSX ])
let _ =
  ((Animated.createElement ~initialValue:((0.0)[@ns.namedArgLoc ])
      ~value:((value)[@ns.namedArgLoc ])
      ~children:((fun value ->
                    ((div
                        ~style:((ReactDOMRe.Style.make ~width:(({js|20px|js})
                                   [@ns.namedArgLoc ])
                                   ~height:(({js|20px|js})[@ns.namedArgLoc ])
                                   ~borderRadius:(({js|100%|js})
                                   [@ns.namedArgLoc ])
                                   ~backgroundColor:(({js|red|js})
                                   [@ns.namedArgLoc ]))
                        [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
                    [@JSX ]))[@ns.braces ]) ())
  [@JSX ])
let _ =
  ((Animated.createElement ~initialValue:((0.0)[@ns.namedArgLoc ])
      ~value:((value)[@ns.namedArgLoc ])
      ~children:((fun value ->
                    (((div
                         ~style:((ReactDOMRe.Style.make
                                    ~width:(({js|20px|js})[@ns.namedArgLoc ])
                                    ~height:(({js|20px|js})
                                    [@ns.namedArgLoc ])
                                    ~borderRadius:(({js|100%|js})
                                    [@ns.namedArgLoc ])
                                    ~backgroundColor:(({js|red|js})
                                    [@ns.namedArgLoc ]))
                         [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
                    [@JSX ]) : ReasonReact.element))[@ns.braces ]) ())
  [@JSX ])
let _ =
  ((Animated.createElement ~initialValue:((0.0)[@ns.namedArgLoc ])
      ~value:((value)[@ns.namedArgLoc ])
      ~children:((fun value ->
                    ((div
                        ~style:((ReactDOMRe.Style.make ~width:(({js|20px|js})
                                   [@ns.namedArgLoc ])
                                   ~height:(({js|20px|js})[@ns.namedArgLoc ])
                                   ~borderRadius:(({js|100%|js})
                                   [@ns.namedArgLoc ])
                                   ~backgroundColor:(({js|red|js})
                                   [@ns.namedArgLoc ]))
                        [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
                    [@ns.braces ][@JSX ]))[@ns.braces ][@foo ]) ())
  [@JSX ])
let _ =
  ((Animated.createElement ~initialValue:((0.0)[@ns.namedArgLoc ])
      ~value:((value)[@ns.namedArgLoc ])
      ~children:((fun value ->
                    ((let width = {js|20px|js} in
                      let height = {js|20px|js} in
                      ((div
                          ~style:((ReactDOMRe.Style.make ~width:((width)
                                     [@ns.namedArgLoc ]) ~height:((height)
                                     [@ns.namedArgLoc ])
                                     ~borderRadius:(({js|100%|js})
                                     [@ns.namedArgLoc ])
                                     ~backgroundColor:(({js|red|js})
                                     [@ns.namedArgLoc ]))
                          [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
                        [@JSX ]))
                    [@ns.braces ]))[@ns.braces ]) ())
  [@JSX ])
let _ =
  ((div ~callback:((reduce (fun () -> not state))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((button ?id:((id)[@ns.namedArgLoc ])
      ~className:((Cn.make [|{js|button|js};{js|is-fullwidth|js}|])
      [@ns.namedArgLoc ][@ns.braces ]) ~onClick:((onClick)[@ns.namedArgLoc ])
      ~children:[(("Submit" |> ste)[@ns.braces ])] ())
  [@JSX ])
let _ =
  ((button ?id:((id)[@ns.namedArgLoc ])
      ~className:((Cn.make [{js|button|js}; {js|is-fullwidth|js}])
      [@ns.namedArgLoc ][@ns.braces ]) ~onClick:((onClick)[@ns.namedArgLoc ])
      ~children:[(("Submit" |> ste)[@ns.braces ])] ())
  [@JSX ])
let _ =
  ((button ?id:((id)[@ns.namedArgLoc ])
      ~className:((Cn.make ({js|button|js}, {js|is-fullwidth|js}))
      [@ns.namedArgLoc ][@ns.braces ]) ~onClick:((onClick)[@ns.namedArgLoc ])
      ~children:[(("Submit" |> ste)[@ns.braces ])] ())
  [@JSX ])
let _ =
  ((button ?id:((id)[@ns.namedArgLoc ]) ~className:((Cn.make { a = b })
      [@ns.namedArgLoc ][@ns.braces ]) ~onClick:((onClick)[@ns.namedArgLoc ])
      ~children:[(("Submit" |> ste)[@ns.braces ])] ())
  [@JSX ])
let _ =
  ((X.createElement ~y:((z |. (Belt.Option.getWithDefault {js||js}))
      [@ns.namedArgLoc ][@ns.braces ]) ~children:[] ())
  [@JSX ])
let _ =
  ((div ~style:((getStyle ())[@ns.namedArgLoc ][@ns.braces ])
      ~children:[((ReasonReact.string {js|BugTest|js})[@ns.braces ])] ())
  [@JSX ])
let _ =
  ((div
      ~children:[(((let left = limit |. Int.toString in
                    (((((({js||js})[@res.template ]) ^ left)[@res.template ])
                        ^ (({js| characters left|js})[@res.template ]))
                      [@res.template ]) |. React.string))
                [@ns.braces ])] ())
  [@JSX ])
let _ =
  ((View.createElement ~style:((styles#backgroundImageWrapper)
      [@ns.namedArgLoc ])
      ~children:[(((let uri = {js|/images/header-background.png|js} in
                    ((Image.createElement ~resizeMode:((Contain)
                        [@ns.namedArgLoc ]) ~style:((styles#backgroundImage)
                        [@ns.namedArgLoc ]) ~uri:((uri)[@ns.namedArgLoc ])
                        ~children:[] ())
                      [@JSX ])))
                [@ns.braces ])] ())
  [@JSX ])
;;((div
      ~children:[(((((possibleGradeValues |>
                        (List.filter (fun g -> g <= state.maxGrade)))
                       |>
                       (List.map
                          (fun possibleGradeValue ->
                             ((option
                                 ~key:((possibleGradeValue |> string_of_int)
                                 [@ns.namedArgLoc ][@ns.braces ])
                                 ~value:((possibleGradeValue |> string_of_int)
                                 [@ns.namedArgLoc ][@ns.braces ])
                                 ~children:[(((possibleGradeValue |>
                                                 string_of_int)
                                                |> str)
                                           [@ns.braces ])] ())
                             [@JSX ]))))
                      |> Array.of_list)
                     |> ReasonReact.array)
                [@ns.braces ])] ())[@JSX ])
;;((div ~children:[((Js.log (a <= 10))[@ns.braces ])] ())[@JSX ])
;;((div
      ~children:[((div ~children:[((Js.log (a <= 10))[@ns.braces ])] ())
                [@JSX ])] ())[@JSX ])
;;((div
      ~children:[((div ~onClick:((fun _ -> Js.log (a <= 10))
                     [@ns.namedArgLoc ][@ns.braces ])
                     ~children:[((div
                                    ~children:[((Js.log (a <= 10))
                                              [@ns.braces ])] ())
                               [@JSX ])] ())
                [@JSX ])] ())[@JSX ])
;;((div ~children:element ())[@JSX ])
;;((div ~children:((fun a -> 1)[@ns.braces ]) ())[@JSX ])
;;((div ~children:((span ~children:[] ())[@JSX ]) ())[@JSX ])
;;((div ~children:[|a|] ())[@JSX ])
;;((div ~children:(1, 2) ())[@JSX ])
;;(([element])[@JSX ])
;;(([(((fun a -> 1))[@ns.braces ])])[@JSX ])
;;(([((span ~children:[] ())[@JSX ])])[@JSX ])
;;(([[|a|]])[@JSX ])
;;(([(1, 2)])[@JSX ])