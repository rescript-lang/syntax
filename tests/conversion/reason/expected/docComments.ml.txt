@@ocaml.text(" The first special comment of the file is the comment associated
     to the whole module. ")

/** The comment for function f */
let f = (x, y) => x + y

@@ocaml.text(" This comment is not attached to any element since there is another
     special comment just before the next element. ")

/* A simple comment. */
/* * Comment for exception My_exception, even with a simple comment
 between the special comment and the exception. */
exception My_exception(int => int, int)

/** Comment for type weather */
type weather =
  | /** The comment for constructor Rain */ Rain(int)
  | /** The comment for constructor Sun */ Sun

/** The comment for type my_record */
type my_record = {
  /** Comment for field foo */
  foo: int,
  /** Comment for field bar */
  bar: string,
}

/** The comment for module Foo */
module Foo = {
  /** The comment for x */ /** A special comment in the class, but not associated to any element. */
  let x = 0
}

/** The comment for module type my_module_type. */
module type my_module_type = {
  /* Comment for value x. */
  let x: int
  /* ... */
}
