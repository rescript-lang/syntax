@@ocaml.text(" The first special comment of the file is the comment associated
     with the whole module.")

@@ocaml.text(" Special comments can be placed between elements and are kept
     by the OCamldoc tool, but are not associated to any element.
     @-tags in these comments are ignored.")

@@ocaml.text(/* ***************************************************************** */
" Comments like the one above, with more than two asterisks,
     are ignored. ")

/** The comment for function f. */ /** The continuation of the comment for function f. */
let f: (int, int) => int

/* Hello, I'm a simple comment :-) */
/* * Comment for exception My_exception, even with a simple comment
 between the special comment and the exception. */
exception My_exception(int => int, int)

/** Comment for type weather */
type weather =
  | /** The comment for constructor Rain */ Rain(int)
  | /** The comment for constructor Sun */ Sun

/** Comment for type weather2 */
/* * I can continue the comment for type weather2 here
 because there is already a comment associated to the last constructor. */
type weather2 =
  | /** The comment for constructor Rain */ Rain(int)
  | /** The comment for constructor Sun */ Sun

/** The comment for type my_record */ /** Continuation of comment for type my_record */
type my_record = {
  /** Comment for field foo */
  foo: int,
  /** Comment for field bar */
  bar: string,
}

/** Comment for foo */ /** This comment is associated to foo and not to bar. */
let foo: string

/** This comment is associated to foo and not to bar. */ /** This comment is associated to bar. */
let bar: string

/** The comment for module Foo */
module Foo: {
  /** The comment for x */
  let x: int

  @@ocaml.text(" A special comment that is kept but not associated to any element ")
}

/** The comment for module type my_module_type. */
module type my_module_type = {
  /** The comment for value x. */
  let x: int

  /** The comment for module M. */
  module M: {
    /** The comment for value y. */
    let y: int

    /* ... */
  }
}
